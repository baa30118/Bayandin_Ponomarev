import psycopg2

database="school_db"
user="school"
password="School1234*"
host="79.174.88.238"
port="15221"
# Создаём соединение с базой данных
conn = psycopg2.connect(database=database, user=user, password=password, host=host, port=port)

cur = conn.cursor()
cur.execute(open("1.0 migration.sql", "r").read())



def load(car_id):
    return cur.execute(f"SELECT id={car_id} FROM cars;"), cur.execute(f"SELECT id_cars={car_id} FROM accidents;")

def save(car_info, car_accidents):
    model = car_info[0]
    year = car_info[1]
    color = car_info[2]
    plate_number = car_info[3]
    car_type = car_info[4]
    date = car_accidents[0]
    damage_description = car_accidents[1]
    cur.execute("INSERT INTO cars (model, year, color, plate_number, car_type) VALUES (%s, %s, %s, %s, %s)",
                (model, year, color, plate_number, car_type))
    cur.execute("INSERT INTO accidents (date, damage_description) VALUES (%s, %s)",
            (date, damage_description))
    conn.commit()


#example
# save((model, year, color, plate_number, car_type), (date, damage_description))


#load(car_id)
#---> (id, model, year, color, plate_number, car_type)
#---> (id, id_cars, date, damage_description)


class Car(BaseModel):
    id: int
    model: str
    year: int
    color: str
    plate_number: str
    car_type: str


# Модель для ДТП
class Accident(BaseModel):
    id: int
    car_id: int
    date: date
    damage_description: str

# Модель для ответа, включающего автомобиль и его ДТП
class CarWithAccidents(BaseModel):
    car: Car
    accidents: List[Accident]